name: release

on:
  push:
    tags:
      - v*

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Set tag version in an environment variable (remove the first character)
      run: |
        echo "NEW_VERSION_CODE=$(echo ${GITHUB_REF/refs\/tags\//} | cut -c 2-)" >> $GITHUB_ENV
        echo "NEW_VERSION_NAME=$(echo ${GITHUB_REF/refs\/tags\//})" >> $GITHUB_ENV

    - name: Build and publish generator in local Maven repository
      run: ./gradlew publishToMavenLocal
      working-directory: ./generator

    - name: Build and publish generator in JCenter
      run: ./gradlew bintrayUpload
      working-directory: ./generator
      env:
        BINTRAY_API_USER: ${{ secrets.BINTRAY_API_USER }}
        BINTRAY_API_KEY: ${{ secrets.BINTRAY_API_KEY }}

    - name: Build and publish the Maven plugin in JCenter
      run: ./mvnw deploy --settings=settings.xml
      working-directory: ./maven-plugin
      env:
        BINTRAY_API_USER: ${{ secrets.BINTRAY_API_USER }}
        BINTRAY_API_KEY: ${{ secrets.BINTRAY_API_KEY }}

    - name: Build and publish the Gradle plugin in Gradle Plugin Portal
      run: ./gradlew publishPlugins -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}
      working-directory: ./gradle-plugin

    - name: Create GitHub release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.NEW_VERSION_NAME }}
        release_name: ${{ env.NEW_VERSION_NAME }}
        body: |
          https://plugins.gradle.org/plugin/com.patxi.poetimizely/${{ env.NEW_VERSION_CODE }}
          https://bintray.com/patxibocos/com.patxi/poetimizely-generator/${{ env.NEW_VERSION_CODE }}
          https://bintray.com/patxibocos/com.patxi/poetimizely-maven-plugin/${{ env.NEW_VERSION_CODE }}